name: Build and test Docker image

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "./**/*.md"
      - "LICENSE"

env:
  IMAGE_NAME: localhost:5000/cdalvaro/docker-nerd-fonts-patcher:${{ github.sha }}
  REGISTRY_PATH: ${{ github.workspace }}/registry
  CACHE_PATH: /tmp/.buildx-cache

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Start Docker registry
        run: |
          docker run --rm --detach --publish 5000:5000 \
            --volume ${REGISTRY_PATH}:/var/lib/registry \
            --name registry registry:2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build docker-nerd-fonts-patcher image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: |
            type=local,src=${{ env.CACHE_PATH }}
            ghcr.io/cdalvaro/docker-nerd-fonts-patcher:latest
          cache-to: type=local,dest=${{ env.CACHE_PATH }}
          push: true
          tags: ${{ env.IMAGE_NAME }}

      - name: Stop Docker registry
        run: docker stop registry

      - name: Upload Docker registry data for testing
        uses: actions/upload-artifact@v3
        with:
          name: docker-registry-data
          path: ${{ env.REGISTRY_PATH }}/

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64, linux/arm/v7]
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      PLATFORM: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker registry data from build job
        uses: actions/download-artifact@v3
        with:
          name: docker-registry-data
          path: ${{ env.REGISTRY_PATH }}

      - name: Enable Docker experimental
        run: |
          # Enable docker daemon experimental support.
          echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
          # Install QEMU multi-architecture support for docker buildx.
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Start Docker registry
        run: |
          docker run --rm --detach --publish 5000:5000 \
            --volume ${REGISTRY_PATH}:/var/lib/registry \
            --name registry registry:2
          sleep 10

      - name: Import Docker images
        run: docker pull --platform ${{ matrix.platform }} ${IMAGE_NAME}

      - name: Docker inspect
        run: docker buildx imagetools inspect ${IMAGE_NAME} | grep '${{ matrix.platform }}'

      - name: Install ttx tool
        run: sudo apt update -y && sudo apt install -y python3-fonttools fonttools

      - name: Execute tests
        env:
          PLATFORM: ${{ matrix.platform }}
        run: bash tests/patch-test.sh
